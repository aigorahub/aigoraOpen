% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/weighted_lin_reg.R
\name{weighted_lin_reg}
\alias{weighted_lin_reg}
\alias{update.weighted_lin_reg}
\title{General Interface for Weighted Linear Regression}
\usage{
weighted_lin_reg(mode = "regression", penalty = NULL, mixture = NULL)

\method{update}{weighted_lin_reg}(
  object,
  parameters = NULL,
  penalty = NULL,
  mixture = NULL,
  fresh = FALSE,
  ...
)
}
\arguments{
\item{mode}{A single character string for the type of model.
the only possible value for this model is "regression".}

\item{penalty}{The total amount of regularization
in the model. Note that this must be zero for some engines.
This value is used for all PLS components for X.}

\item{mixture}{The mixture amounts of different types of
regularization (see below). Note that this will be ignored for some engines.}

\item{object}{A weighted linear regression model specification.}

\item{parameters}{A 1-row tibble or named list with \emph{main}
parameters to update. If the individual arguments are used,
these will supersede the values in \code{parameters}. Also, using
engine arguments in this object will result in an error.}

\item{fresh}{A logical for whether the arguments should be
modified in-place of or replaced wholesale.}

\item{...}{Not used for \code{update()}.}
}
\value{
An updated model specification.
}
\description{
\code{weighted_lin_reg()} is a way to generate a \emph{specification} of a model
before fitting and allows the model to be created using
package aigoraML. The main
arguments for the model are:
\itemize{
\item \code{penalty}: The total amount of regularization
in the model. Note that this must be zero for some engines.
\item \code{mixture}: The mixture amounts of different types of
regularization (see below). Note that this will be ignored for some engines.
}
These arguments are converted to their specific names at the
time that the model is fit. Other options and arguments can be
set using \code{set_engine()}. If left to their defaults
here (\code{NULL}), the values are taken from the underlying model
functions. If parameters need to be modified, \code{update()} can be used
in lieu of recreating the object from scratch.
}
\details{
The model can be created using the \code{fit()} function using the
following \emph{engines}:
\itemize{
\item \pkg{R}:  \code{"weighted_glmnet"}  (the default)
}
}
\examples{
weighted_lin_reg() \%>\%
  set_engine("weighted_glmnet") \%>\%
  set_mode("regression") \%>\%
  translate()

model <- weighted_lin_reg(penalty = 10, mixture = 0.1)
model
update(model, penalty = 1)
update(model, penalty = 1, fresh = TRUE)
}
